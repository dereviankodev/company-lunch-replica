type Cart {
    id: ID!
    count: Int!
    created_at: DateTime!
    updated_at: DateTime!

    user: User! @belongsTo
    menu: Menu! @belongsTo
}

extend type Query @guard {
    carts: [Cart!]! @all(scopes: ["accessUser"]) @softDeletes
    cartsPagination: [Cart!]! @paginate(scopes: ["accessUser"]) @softDeletes
    cart(id: ID @eq): Cart @can(ability: "view", injectArgs: true) @find @softDeletes
}

extend type Mutation {
    createCart(
        user_id: ID!
        menu_id: ID!
        count: Int!
    ): Cart! @can(ability: "create") @create
    updateCart(
        id: ID!
        user_id: ID
        menu_id: ID
        count: Int
    ): Cart @can(ability: "update") @update
    upsertCart(
        id: ID!
        user_id: ID!
        menu_id: ID!
        count: Int!
    ): Cart @can(ability: "upsert") @upsert
    deleteCart(id: ID!): Cart @can(ability: "delete") @forceDelete
    clearCart(user_id: ID!): [Cart!]! @can(ability: "delete", injectArgs: true) @field(resolver: "CartMutator@forceDelete")
}