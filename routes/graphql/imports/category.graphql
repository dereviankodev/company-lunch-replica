type Category {
    id: ID!
    name: String!
    img_path: String!
    created_at: DateTime!
    updated_at: DateTime!

    dishes: [Dish!]! @hasMany
}

extend type Query @guard {
    categories: [Category!]! @all @softDeletes
    categoriesPagination: [Category!]! @paginate @softDeletes
    category(id: ID @eq): Category @find @softDeletes
}

extend type Mutation {
    createCategory(
        name: String! @rules(apply: ["unique:categories"])
    ): Category! @can(ability: "create") @create
    updateCategory(
        id: ID!
        name: String @rules(apply: ["unique:categories"])
    ): Category @can(ability: "update") @update
    upsertCategory(
        id: ID!
        name: String! @rules(apply: ["unique:categories"])
    ): Category @can(ability: "upsert") @upsert
    deleteCategory(id: ID!): Category @can(ability: "delete") @delete
    restoreCategory(id: ID!): Category @can(ability: "restore") @restore
    forceDeleteCategoryCategory(id: ID!): Category @can(ability: "forceDelete") @forceDelete
}